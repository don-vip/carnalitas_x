# Slave base price. Based on individual_recruit_guest_interaction_cost.
carnx_slave_base_price_value = {
	# Base (reduced compared to guests 20 -> 10)
	add = 10

	# Claims (50 if any claims, reduced compared to guests)
	if = {
		limit = {
			any_claim = { always = yes }
		}
		add = 50
	}

	# Dynasty (5 for each dynasty prestige level, reduced compared to guests 15 -> 5)
	if = {
		limit = {
			exists = dynasty
		}
		add = {
			value = dynasty.dynasty_prestige_level # 0-10
			multiply = 5 # Max 50
		}
	}

	# Genetic traits (genetic character value multiplied by 5)
	add = {
		value = genetic_character_value
		multiply = 5
		min = -15
	}

	# Commander traits (15 for each commander trait)
	if = {
		limit = {
			number_of_commander_traits >= 1
		}
		add = {
			value = number_of_commander_traits
			multiply = 15
			min = 0
		}
	}

	# Court Position traits (10 to 20 depending on tier)
	if = {
		limit = {
			OR = {
				has_trait = physician_3 # Court Physician
				has_trait = eunuch # Chief Eunuch
				has_trait = poet # Court Poet
				has_completed_inspiration = yes # Antiquarian
			}
		}
		add = 20
	}
	else_if = {
		limit = {
			OR = {
				has_trait = physician_2 # Court Physician
				has_trait = mystic_3 # Court Physician
				has_trait = shrewd # Court Tutor
				has_trait = lifestyle_gardener # Court Gardener
				has_trait = administrator # Seneschal
				has_trait = overseer # Seneschal
				has_trait = blademaster_3 # Bodyguard, Champion
			}
		}
		add = 15
	}
	else_if = {
		limit = {
			OR = {
				has_trait = physician_1 # Court Physician
				has_trait = mystic_2 # Court Physician
				has_trait = lifestyle_herbalist # Court Physician
				has_trait = athletic # Court Jester
				has_trait = comfort_eater # Food Taster
				has_trait = blademaster_2 # Bodyguard, Champion
			}
		}
		add = 10
	}

	# Skills (5 for each skill point above 12)
	if = {
		limit = {
			diplomacy >= decent_skill_rating
		}
		add = {
			value = diplomacy
			subtract = decent_skill_rating
			multiply = 5
		}
	}
	if = {
		limit = {
			martial >= decent_skill_rating
		}
		add = {
			value = martial
			subtract = decent_skill_rating
			multiply = 5
		}
	}
	if = {
		limit = {
			stewardship >= decent_skill_rating
		}
		add = {
			value = stewardship
			subtract = decent_skill_rating
			multiply = 5
		}
	}
	if = {
		limit = {
			intrigue >= decent_skill_rating
		}
		add = {
			value = intrigue
			subtract = decent_skill_rating
			multiply = 5
		}
	}
	if = {
		limit = {
			learning >= decent_skill_rating
		}
		add = {
			value = learning
			subtract = decent_skill_rating
			multiply = 5
		}
	}
	if = {
		limit = {
			prowess >= decent_skill_rating
		}
		add = {
			value = prowess
			subtract = decent_skill_rating
			multiply = 3 # Reduced compared to guests
		}
	}

	# Attraction (-25 to 25 depending on attraction, new compared to guests)
	add = {
		value = attraction
		divide = high_positive_attraction
		multiply = 25
	}

	# Female (15 if a visibly fertile female, new compared to guests)
	if = {
		limit = {
			is_female = yes
			is_visibly_fertile = yes
		}
		add = 15
	}

	# Age (up to 12 depending on age, new compared to guests)
	add = {
		value = 12
		if = {
			limit = { age < 16 }
			subtract = {
				value = 16
				subtract = age
			}
		}
		else_if = {
			limit = { age > 30 }
			subtract = {
				value = age
				subtract = 30
				multiply = 0.5
				floor = yes
			}
		}
	}

	# Apply a correction factor to get the final price
	multiply = carnx_slave_base_price_multiplier

	floor = yes
	min = 1
}

carnx_slave_ask_price_value = {
	value = carnx_slave_base_price_value

	# Make it higher for the player
	if = {
		limit = {
			exists = scope:actor
			scope:actor = { is_ai = no }
		}
		multiply = carnx_slave_ask_price_player_multiplier
	}

	# Adjust price for tribal rulers
	multiply = carnx_slave_price_tribal_multiplier

	# Seller personality multiplier (0.8 to 1.2 based on ai_greed)
	if = {
		limit = { exists = scope:seller }
		multiply = {
			value = scope:seller.ai_greed
			multiply = 0.002
			add = 1
		}
	}

	floor = yes
	min = 1
}

carnx_slave_bid_price_value = {
	value = carnx_slave_base_price_value

	# Make it lower for the player
	if = {
		limit = {
			exists = scope:actor
			scope:actor = { is_ai = no }
		}
		multiply = carnx_slave_bid_price_player_multiplier
	}

	# Adjust price for tribal rulers
	multiply = carnx_slave_price_tribal_multiplier

	# Buyer personality multiplier (0.8 to 1.2 based on ai_greed)
	if = {
		limit = { exists = scope:buyer }
		multiply = {
			value = scope:buyer.ai_greed
			multiply = -0.002
			add = 1
		}
	}

	floor = yes
	min = 1
}

# Opinion gain from gifting a slave. Calculated by multiplying the slave base price (carnx_slave_base_price_value)
# by the "opinion per gold" ratio from sending money as a gift by scope:actor to scope:recipient
# (send_gift_opinion divided by gift_value).
carnx_gift_slave_opinion = {
	value = carnx_slave_base_price_value
	multiply = carnx_slave_price_tribal_multiplier
	multiply = send_gift_opinion
	divide = gift_value
	multiply = carnx_gift_slave_opinion_multiplier
	floor = yes
	min = 1
	max = 50
}

carnx_slave_price_tribal_multiplier = {
	if = {
		limit = { exists = scope:actor }
		scope:actor = { save_temporary_scope_as = party1 }
	}
	else = {
		root = { save_temporary_scope_as = party1 }
	}

	if = {
		limit = { exists = scope:buyer }
		scope:buyer = { save_temporary_scope_as = party2 }
	}
	else_if = {
		limit = { exists = scope:seller }
		scope:seller = { save_temporary_scope_as = party2 }
	}
	else_if = {
		limit = { exists = scope:recipient }
		scope:recipient = { save_temporary_scope_as = party2 }
	}

	if = {
		limit = { exists = scope:party2 }
		if = {
			limit = {
				scope:party1 = { has_government = tribal_government }
				scope:party2 = { has_government = tribal_government }
			}
			value = 0.5
		}
		else_if = {
			limit = {
				OR = {
					scope:party1 = { has_government = tribal_government }
					scope:party2 = { has_government = tribal_government }
				}
			}
			value = 0.75
		}
		else = {
			value = 1
		}
	}
	else = {
		if = {
			limit = {
				scope:party1 = { has_government = tribal_government }
			}
			value = 0.5
		}
		else = {
			value = 1
		}
	}
}

carnx_buy_slave_ai_accept_no_actor_value = {
	save_temporary_scope_as = slave
	value = 50

	# Slave recently bought
	if = {
		limit = {
			scope:slave = {
				has_character_flag = carnx_slave_recently_bought
			}
		}
		add = -100
	}

	# Employed as councillor (NIV doubled), court position, knight / commander, or in some other way (NIV)
	if = {
		limit = {
			scope:slave = {
				is_councillor_of = scope:seller
			}
		}
		add = { value = carnx_ai_negative_employed_impact_value multiply = 2 }
	}
	if = {
		limit = {
			scope:slave = {
				AND = {
					has_any_court_position = yes
					any_court_position_employer = { this = scope:seller }
				}
			}
		}
		add = { value = carnx_ai_negative_employed_impact_value multiply = 2 }
	}
	if = {
		limit = {
			scope:slave = {
				OR = {
					is_knight_of = scope:seller
					is_commanding_army = yes
				}
			}
		}
		add = carnx_ai_negative_employed_impact_value
	}
	if = {
		limit = {
			scope:slave = {
				carnx_has_important_role_trigger = { RULER = scope:seller }
			}
		}
		add = carnx_ai_negative_employed_impact_value
	}

	# Family and relations (-25 to -100 depending on how close the relation)
	# Reluctant to sell family and relations, wants to free them instead
	if = {
		limit = {
			scope:slave = {
				carnx_is_family_or_positive_relation_trigger = { CHARACTER = scope:seller }
			}
		}
		add = {
			value = -25
			if = {
				limit = {
					scope:slave = {
						OR = {
							is_child_of = scope:seller
							has_relation_best_friend = scope:seller
							has_relation_soulmate = scope:seller
						}
					}
				}
				multiply = 4
			}
			else_if = {
				limit = {
					scope:slave = {
						OR = {
							is_close_family_of = scope:seller
							has_relation_friend = scope:seller
							has_relation_lover = scope:seller
							has_secret_relation_lover = scope:seller
							has_relation_crush = scope:seller
							is_spouse_of = scope:seller
						}
					}
				}
				multiply = 3
			}
			else_if = {
				limit = {
					scope:slave = {
						is_close_or_extended_family_of = scope:seller
					}
				}
				multiply = 2
			}
		}
	}

	# Claims (NIV if useful claims on neighbouring realms)
	if = {
		limit = {
			scope:slave = {
				carnx_has_useful_claims_trigger = { RULER = scope:seller }
			}
		}
		add = carnx_ai_negative_claims_impact_value
	}

	# Attraction (0 to NIV depending on attraction, doubled for lustful, halved for chaste)
	if = {
		limit = {
			scope:slave = {
				carnx_is_attractive_to_character_trigger = { CHARACTER = scope:seller }
			}
		}
		add = {
			value = scope:slave.attraction
			divide = high_positive_attraction
			multiply = carnx_ai_negative_attraction_impact_value
			if = {
				limit = { scope:seller = { has_trait = lustful } }
				multiply = 2
			}
			else_if = {
				limit = { scope:seller = { has_trait = chaste } }
				multiply = 0.5
			}
			floor = yes
		}
	}

	# Female (NIV if a visibly fertile female)
	if = {
		limit = {
			scope:slave = {
				carnx_is_visibly_fertile_female_trigger = yes
			}
		}
		add = carnx_ai_negative_female_impact_value
	}

	# Age (up to NIV depending on age, only if useful)
	if = {
		limit = {
			scope:slave = {
				carnx_is_useful_slave_to_current_owner_trigger = { RULER = scope:seller }
			}
		}
		add = {
			value = carnx_ai_negative_age_impact_value
			if = {
				limit = { scope:slave.age < 16 }
				subtract = {
					value = 16
					subtract = scope:slave.age
					multiply = carnx_ai_negative_age_impact_value
					divide = 10
					floor = yes
				}
			}
			else_if = {
				limit = { scope:slave.age > 30 }
				subtract = {
					value = scope:slave.age
					subtract = 30
					multiply = carnx_ai_negative_age_impact_value
					divide = 20
					floor = yes
				}
			}
		}
	}

	# Price (NIV if price < minor_gold_value, PIV if price > major_gold_value)
	if = {
		limit = {
			scope:slave.carnx_slave_ask_price_value < scope:seller.minor_gold_value
		}
		add = carnx_ai_negative_price_impact_value
	}
	else_if = {
		limit = {
			scope:slave.carnx_slave_ask_price_value > scope:seller.major_gold_value
		}
		add = carnx_ai_positive_price_impact_value
	}
}

carnx_buy_slave_ai_accept_value = {
	value = carnx_buy_slave_ai_accept_no_actor_value
	save_temporary_scope_as = slave

	# Opinion of actor
	add = {
		value = scope:opinion_of_actor
		multiply = carnx_buy_sell_slave_ai_opinion_multiplier
		floor = yes
	}

	# Avoid doing business with rivals or nemesises
	if = {
		limit = {
			scope:seller = {
				has_relation_rival = scope:actor
			}
		}
		add = -100
	}
	if = {
		limit = {
			scope:seller = {
				has_relation_nemesis = scope:actor
			}
		}
		add = -200
	}

	# Not enough gold
	if = {
		limit = {
			scope:actor = {
				trigger_if = {
					limit = { is_ai = yes }
					short_term_gold < scope:slave.carnx_slave_ask_price_value
				}
				trigger_else = {
					gold < scope:slave.carnx_slave_ask_price_value
				}
			}
		}
		multiply = 0
	}
}

carnx_sell_slave_ai_accept_no_actor_value = {
	save_temporary_scope_as = buyer
	value = -50

	# Avoid spending money if at war
	if = {
		limit = {
			scope:buyer = {
				is_at_war = yes
			}
		}
		add = -50
	}

	# Slavery crime (-1000) or shunned by faith (-50)
	if = {
		limit = {
			scope:buyer = {
				carnx_is_slavery_crime_trigger = { CHARACTER = scope:slave }
			}
		}
		add = -1000
	}
	if = {
		limit = {
			scope:buyer = {
				carnx_is_slavery_shunned_trigger = { CHARACTER = scope:slave }
			}
		}
		add = -50
	}

	# Lacking councillors or court positions (PIV for max skill or aptitude above cutoff)
	save_temporary_scope_as = liege
	add = {
		value = scope:slave.carnx_max_councillor_skill_difference_value
		multiply = carnx_ai_positive_skill_impact_value
	}
	add = {
		value = scope:slave.carnx_max_aptitude_difference_value
		multiply = carnx_ai_positive_aptitude_impact_value
	}

	# Lacking knights or commanders (PIV for skill above cutoff)
	if = {
		limit = {
			scope:slave = {
				carnx_can_serve_as_knight_trigger = { RULER = scope:buyer }
			}
		}
		add = {
			value = scope:slave.prowess
			subtract = carnx_default_skill_threshold
			multiply = carnx_ai_positive_prowess_impact_value
		}
	}
	if = {
		limit = {
			scope:slave = {
				carnx_can_serve_as_commander_trigger = { RULER = scope:buyer }
			}
		}
		add = {
			value = scope:slave.carnx_commander_skill_value
			multiply = carnx_ai_positive_cs_impact_value
		}
	}

	# Family and relations (-25 to -100 depending on how close the relation)
	# Reluctant to buy family and relations, wants to ransom them instead
	if = {
		limit = {
			scope:slave = {
				carnx_is_family_or_positive_relation_trigger = { CHARACTER = scope:buyer }
			}
		}
		add = {
			value = -25
			if = {
				limit = {
					scope:slave = {
						OR = {
							is_child_of = scope:buyer
							has_relation_best_friend = scope:buyer
							has_relation_soulmate = scope:buyer
						}
					}
				}
				multiply = 4
			}
			else_if = {
				limit = {
					scope:slave = {
						OR = {
							is_close_family_of = scope:buyer
							has_relation_friend = scope:buyer
							has_relation_lover = scope:buyer
							has_secret_relation_lover = scope:buyer
							has_relation_crush = scope:buyer
							is_spouse_of = scope:buyer
						}
					}
				}
				multiply = 3
			}
			else_if = {
				limit = {
					scope:slave = {
						is_close_or_extended_family_of = scope:buyer
					}
				}
				multiply = 2
			}
		}
	}

	# Claims (PIV if useful claims on neighbouring realms)
	if = {
		limit = {
			scope:slave = {
				carnx_has_useful_claims_trigger = { RULER = scope:buyer }
			}
		}
		add = carnx_ai_positive_claims_impact_value
	}

	# Attraction (0 to PIV depending on attraction, doubled for lustful, halved for chaste)
	if = {
		limit = {
			scope:slave = {
				carnx_is_attractive_to_character_trigger = { CHARACTER = scope:buyer }
				NOT = { carnx_can_serve_as_slave_concubine_trigger = { RULER = scope:buyer } }
			}
		}
		add = {
			value = scope:slave.attraction
			divide = high_positive_attraction
			multiply = carnx_ai_positive_attraction_impact_value
			if = {
				limit = { scope:buyer = { has_trait = lustful } }
				multiply = 2
			}
			else_if = {
				limit = { scope:buyer = { has_trait = chaste } }
				multiply = 0.5
			}
			floor = yes
		}
	}

	# Female (PIV if a visibly fertile female)
	if = {
		limit = {
			scope:slave = {
				carnx_is_visibly_fertile_female_trigger = yes
			}
		}
		add = carnx_ai_positive_female_impact_value
	}

	# Age (up to PIV depending on age, only if useful)
	if = {
		limit = {
			scope:slave = {
				carnx_is_useful_slave_to_future_owner_trigger = { RULER = scope:buyer }
			}
		}
		add = {
			value = carnx_ai_positive_age_impact_value
			if = {
				limit = { scope:slave.age < 16 }
				subtract = {
					value = 16
					subtract = scope:slave.age
					multiply = carnx_ai_positive_age_impact_value
					divide = 10
					floor = yes
				}
			}
			else_if = {
				limit = { scope:slave.age > 30 }
				subtract = {
					value = scope:slave.age
					subtract = 30
					multiply = carnx_ai_positive_age_impact_value
					divide = 20
					floor = yes
				}
			}
		}
	}

	# Price (PIV if price < minor_gold_value, NIV if price > major_gold_value)
	if = {
		limit = {
			scope:slave.carnx_slave_bid_price_value < scope:buyer.minor_gold_value
		}
		add = carnx_ai_positive_price_impact_value
	}
	else_if = {
		limit = {
			scope:slave.carnx_slave_bid_price_value > scope:buyer.major_gold_value
		}
		add = carnx_ai_negative_price_impact_value
	}
}

carnx_sell_slave_ai_accept_value = {
	value = carnx_sell_slave_ai_accept_no_actor_value

	# Opinion of actor
	add = {
		value = scope:opinion_of_actor
		multiply = carnx_buy_sell_slave_ai_opinion_multiplier
		floor = yes
	}

	# Avoid doing business with rivals or nemesises
	if = {
		limit = {
			scope:buyer = {
				has_relation_rival = scope:actor
			}
		}
		add = -100
	}
	if = {
		limit = {
			scope:buyer = {
				has_relation_nemesis = scope:actor
			}
		}
		add = -200
	}
}

carnx_commander_skill_value = {
	value = martial
	subtract = carnx_default_skill_threshold
	add = {
		value = number_of_commander_traits
		multiply = 3
	}
}

carnx_slave_ransom_cost_value = {
	value = 0

	# TODO Use define:NImprisonment|RANSOM_COST_BY_TIER if possible
	scope:recipient = {
		if = {
			limit = { highest_held_title_tier = tier_empire }
			add = 500
		}
		else_if = {
			limit = { highest_held_title_tier = tier_kingdom }
			add = 200
		}
		else_if = {
			limit = { highest_held_title_tier = tier_duchy }
			add = 100
		}
		else_if = {
			limit = { highest_held_title_tier = tier_county }
			add = 50
		}
		else_if = {
			limit = { highest_held_title_tier = tier_barony }
			add = 30
		}
		else = {
			add = 20
		}
	}

	if = {
		limit = { is_primary_heir_of = scope:recipient }
		multiply = define:NImprisonment|RANSOM_MULTIPLIER_PRIMARY_HEIR
	}
	else_if = {
		limit = { is_spouse_of = scope:recipient }
		multiply = define:NImprisonment|RANSOM_MULTIPLIER_SPOUSE
	}
	else_if = {
		limit = { is_close_family_of = scope:recipient }
		multiply = define:NImprisonment|RANSOM_MULTIPLIER_CLOSE_FAMILY
	}
	else = {
		multiply = define:NImprisonment|RANSOM_MULTIPLIER_OTHER
	}

	min = define:NImprisonment|RANSOM_MIN_COST

	# Round up to the closest number divisible by RANSOM_ROUNDED_TO
	divide = define:NImprisonment|RANSOM_ROUNDED_TO
	ceiling = yes
	multiply = define:NImprisonment|RANSOM_ROUNDED_TO
}

carnx_enslave_tyranny_gain = {
	value = carnx_enslave_basic_tyranny_gain
	if = {
		limit = {
			exists = scope:new_slave
			scope:new_slave = {
				has_no_real_status_trigger = yes
			}
		}
		divide = 2
	}
}

carnx_root_faith_dominant_gender_adjusted_female_chance = {
	value = root_faith_dominant_gender_adjusted_female_chance
	add = carnx_create_character_female_chance
	subtract = 50
	min = 0
	max = 100
}

carn_scope_buyer_current_gold_value = {
	value = scope:buyer.short_term_gold
}

carnx_scope_secondary_recipient_slave_ransom_cost_value = {
	value = 0
	if = {
		limit = { exists = scope:secondary_recipient }
		add = scope:secondary_recipient.carnx_slave_ransom_cost_value
	}
}