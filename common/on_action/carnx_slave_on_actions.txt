carn_on_slave_enslaved = {
	effect = {
		create_character_memory = {
			type = carnx_enslaved_memory
			participants = {
				enslaver = scope:new_owner
			}
		}
		debug_log = "carn_on_slave_enslaved: Slave enslaved"
		debug_log_date = yes
		debug_log_scopes = yes
	}
}

carn_on_slave_freed = {
	effect = {
		create_character_memory = {
			type = carnx_freed_memory
			participants = {
				emancipator = scope:former_owner
			}
		}
		debug_log = "carn_on_slave_freed: Slave freed"
		debug_log_date = yes
		debug_log_scopes = yes
	}
}

carnx_on_slave_bought = {
	effect = {
		create_character_memory = {
			type = carnx_bought_memory
			participants = {
				buyer = scope:buyer
			}
		}
		debug_log = "carnx_on_slave_bought: Slave bought"
		debug_log_date = yes
		debug_log_scopes = yes
	}
}

carnx_on_slave_seized = {
	effect = {
		create_character_memory = {
			type = carnx_seized_memory
			participants = {
				seizer = scope:new_owner
			}
		}
		debug_log = "carnx_on_slave_seized: Slave seized"
		debug_log_date = yes
		debug_log_scopes = yes
	}
}

# Fires when a character leaves a court. Not fired when leaving due to death or similar
# Will still fire even if on_join_court is firing (fires just before it)
# Root is the character
# scope:old_employer is their old employer
on_leave_court = {
	on_actions = { carnx_on_leave_court }
}

carnx_on_leave_court = {
	effect = {
		if = {
			limit = { has_trait = slave }
			every_relation = {
				type = slave_owner
				save_scope_as = owner
			}
			if = {
				limit = {
					exists = scope:owner
					scope:owner = { is_ruler = yes }
				}
				if = {
					limit = { NOT = { is_courtier_of = scope:owner } }
					debug_log = "carnx_on_leave_court: Moving slave to owner's court"
					scope:owner = {
						add_courtier = prev
					}
				}
			}
			else = {
				debug_log = "carnx_on_leave_court: Freeing slave"
				carn_free_slave_effect = yes
			}
		}
	}
}

# A title is lost by a character
# root = the old holder
# scope:title = the title that changes hands
# scope:new_holder = new holder.
on_title_lost = {
	on_actions = { carnx_on_title_lost }
}

carnx_on_title_lost = {
	effect = {
		# If a character becomes unlanded the new holder seizes their slaves
		if = {
			limit = {
				is_landed = no
				any_relation = {
					type = slave
					exists = this
				}
			}
			every_relation = {
				type = slave
				if = {
					limit = { exists = scope:new_holder }
					scope:new_holder = { save_scope_as = new_owner }
					this = { save_scope_as = slave }
					debug_log = "carnx_on_title_lost: Seizing slave by the new title holder"
					carnx_seize_slave_effect = yes
				}
				else = {
					debug_log = "carnx_on_title_lost: Freeing slave"
					carn_free_slave_effect = yes
				}
			}
		}
	}
}

# Called from code once every five years for "playable" (count+) characters.
# Root is the character
five_year_playable_pulse = {
	events = {
		carnx_slave.0001
	}
}